#!/bin/bash

#Install nmap dependency
#sudo apt install nmap -y
#sudo apt-get install -y xdotool

#Run simple nmap to check for live host between ip range 0-100 on 192.168.0.x
#nmap -sn 192.168.0.1-200 > live-hosts.txt

# nmap Command break down:
# Could not scan a sisters laptop, possibly because firewall filtering. Bypassed using -PP flag for nmap
# -PP: nmap will send ICMP timestamp request (type 13) and expects ICMP timestamp replies (type 14).
# -sP/-sn: means no port scan and this flag will skips port discovery.
# nmap -sP -PP 192.168.0.23
# added -PP flag for better network host discovery
LIVEHOSTS=$(wc -l < live-hosts.txt) # check for targets from last scan

cat << "EOF"
 ____  __.      .__                  __                 __               _________                                          
|    |/ _|______|__| _____   _______/  |_  ____   ____ |  | __          /   _____/ ____ _____    ____   ____   ___________  
|      < \_  __ \  |/     \ /  ___/\   __\/  _ \_/ ___\|  |/ /  ______  \_____  \_/ ___\\__  \  /    \ /    \_/ __ \_  __ \ 
|    |  \ |  | \/  |  Y Y  \\___ \  |  | (  <_> )  \___|    <  /_____/  /        \  \___ / __ \|   |  \   |  \  ___/|  | \/ 
|____|__ \|__|  |__|__|_|  /____  > |__|  \____/ \___  >__|_ \         /_______  /\___  >____  /___|  /___|  /\___  >__|    
        \/               \/     \/                   \/     \/                 \/     \/     \/     \/     \/     \/        
EOF

progress_bar () {
	OUTPUT=$(
		case $1 in
		[0-4]) echo -ne "[____________________]" ;;
		[5-9]) echo -ne "[#___________________]" ;;
		[1][0-4]) echo -ne "[##__________________]" ;;
		[1][5-9]) echo -ne "[###_________________]" ;;
		[2][0-4]) echo -ne "[####________________]" ;;
		[2][5-9]) echo -ne "[#####_______________]" ;;
		[3][0-4]) echo -ne "[######______________]" ;;
		[3][5-9]) echo -ne "[#######_____________]" ;;
		[4][0-4]) echo -ne "[########____________]" ;;
		[4][5-9]) echo -ne "[#########___________]" ;;
		[5][0-4]) echo -ne "[##########__________]" ;;
		[5][5-9]) echo -ne "[###########_________]" ;;
		[6][0-4]) echo -ne "[############________]" ;;
		[6][5-9]) echo -ne "[#############_______]" ;;
		[7][0-4]) echo -ne "[##############______]" ;;
		[7][5-9]) echo -ne "[###############_____]" ;;
		[8][0-4]) echo -ne "[################____]" ;;
		[8][5-9]) echo -ne "[#################___]" ;;
		[9][0-4]) echo -ne "[##################__]" ;;
		[9][5-9]) echo -ne "[###################_]" ;;
		100|00) echo -ne "[####################]" ;;
		*) echo -ne "Entry $1 did not match any cases!!!\n";;
		esac)
	printf "$OUTPUT ($1%%)\r"
}


echo "Starting script:"
PS3='Please enter your choice (exit: 5): '
options=("Scan Network" "Show Live Hosts" "Scan Ports" "Display Open Ports" "Quit")
select opt in "${options[@]}"
do
    case $opt in
        "Scan Network")
	    printf "Starting network scan....\n"
	    nmap -sn -PP 192.168.0.1-200 > live-hosts-full.txt && cat live-hosts-full.txt | grep report | awk '{print $(NF)}' | sort -V > live-hosts.txt
	    LIVEHOSTS=$(wc -l < live-hosts.txt)
	    printf "Network scan done. Found $LIVEHOSTS live hosts.\n\n"
	    ;;
	"Show Live Hosts")
	    printf "\n********** ($LIVEHOSTS) Live Hosts **********\n"
	    cat live-hosts.txt
	    printf "********** End of list **********\n\n"
	    ;;
	"Scan Ports")
	    printf "Port scaning starting...\n"
		#nmap -Pn -iL live-hosts.txt --stats-every 1s

		while read line; do
			HOLDER=$(echo $line | grep -o '.....%')
			#echo -e "Content of HOLDER: $HOLDER \n"
			if [[ -n "$HOLDER" ]]; then
				HOLDER=${HOLDER::-4} # make whole number
				progress_bar $HOLDER
			fi
		done < <(nmap -Pn -iL live-hosts.txt -oG target-ports.txt --stats-every 0.5s)
		echo -e "Port Scanning Comple!\n"
	    ;;
	"Display Open Ports")
	    echo hi
		;;
	"Quit")
	    echo "Script Terminated...Goodbye."
	    break
	    ;;
	*) echo "invalid option $REPLY";;
    esac
done

